QVector<QVector<double> > TableWidget::getData()
{
    QVector<QVector<double>> data;

    QItemSelectionModel *selectionModel = tableWidget->selectionModel();
    QModelIndexList *selectedIndexes = new QModelIndexList(selectionModel->selectedIndexes());
    delete selectionModel;

    if (selectedIndexes->size())
    {
        int *selectedIndexesCount = new int(selectedIndexes->count());

        int *topLeftRow = new int(selectedIndexes->at(0).row());
        int *topLeftColumn = new int(selectedIndexes->at(0).column());
        int *bottomRightRow = new int(selectedIndexes->at(*selectedIndexesCount - 1).row());
        int *bottomRightColumn = new int(selectedIndexes->at(*selectedIndexesCount - 1).column());

        delete selectedIndexesCount;

        QList<int> *column_index = new QList<int>;

        int *columns = new int(0);
        if (*bottomRightColumn > *topLeftColumn)
        {
            *columns = *bottomRightColumn - *topLeftColumn + 1;
            for (int i = 0; i < *columns; i++)
            {
                column_index->append(*topLeftColumn + i);
            }
        }
        else
        {
            *columns = *topLeftColumn - *bottomRightColumn + 1;
            for (int i = 0; i < *columns; i++)
            {
                column_index->append(*topLeftColumn - i);
            }
        }

        delete topLeftColumn;
        delete bottomRightColumn;

        int *rows = new int(0);
        if (*bottomRightRow > *topLeftRow)
            *rows = *bottomRightRow - *topLeftRow + 1;
        else
            *rows = *topLeftRow - *bottomRightRow + 1;

        delete bottomRightRow;

        QModelIndex *index = new QModelIndex;
        for (int i = 0; i < *columns; i++)
        {
            QVector<double> vector;
            for (int j = 0; j < *rows; j++)
            {
                *index = tableWidget->model()->index(j + *topLeftRow,column_index->at(i));
                bool ok;
                tableWidget->model()->data(*index).toDouble(&ok);
                if (ok)
                    vector.push_back(tableWidget->model()->data(*index).toDouble());
                else
                    if (tableWidget->model()->data(*index).toString() != "")
                    {
                        tableWidget->model()->setData(*index, QColor(Qt::red), Qt::BackgroundRole);
                        tableWidget->model()->setData(*index, QColor(Qt::white), Qt::ForegroundRole);
                    }
            }
            data.push_back(vector);
            vector.clear();
        }
        delete index;

        delete topLeftRow;

        delete columns;
        delete rows;
        delete column_index;
    }
    delete selectedIndexes;

    return data;
} 
